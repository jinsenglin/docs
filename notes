root@705-ubuntu:/home/jinseng# ip link
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: p4p1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000
    link/ether 00:25:90:7a:21:18 brd ff:ff:ff:ff:ff:ff
3: p5p1: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc pfifo_fast state DOWN mode DEFAULT group default qlen 1000
    link/ether 00:25:90:7a:21:19 brd ff:ff:ff:ff:ff:ff
[ For KVM ]
4: virbr0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default
    link/ether b2:47:7d:c1:49:b7 brd ff:ff:ff:ff:ff:ff
[ For VMware Player ]
5: vmnet1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UNKNOWN mode DEFAULT group default qlen 1000
    link/ether 00:50:56:c0:00:01 brd ff:ff:ff:ff:ff:ff
6: vmnet8: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UNKNOWN mode DEFAULT group default qlen 1000
    link/ether 00:50:56:c0:00:08 brd ff:ff:ff:ff:ff:ff
[ For Docker ]
7: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default
    link/ether 56:84:7a:fe:97:99 brd ff:ff:ff:ff:ff:ff
[ For VirtualBox ]
8: vboxnet0: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000
    link/ether 0a:00:27:00:00:00 brd ff:ff:ff:ff:ff:ff
9: vboxnet1: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000
    link/ether 0a:00:27:00:00:01 brd ff:ff:ff:ff:ff:ff
10: vboxnet2: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000
    link/ether 0a:00:27:00:00:02 brd ff:ff:ff:ff:ff:ff
    
root@705-ubuntu:/home/jinseng# brctl show
bridge name     bridge id               STP enabled     interfaces
docker0         8000.56847afe9799       no
virbr0          8000.000000000000       yes

root@705-ubuntu:/home/jinseng# ovs-vsctl show
9d262fb1-54bd-4942-93f9-c161a2fecd56
    ovs_version: "2.0.2"

root@705-ubuntu:/home/jinseng# ip netns list

root@705-ubuntu:/home/jinseng# route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         140.92.24.1     0.0.0.0         UG    0      0        0 p4p1
140.92.24.0     0.0.0.0         255.255.255.0   U     0      0        0 p4p1
172.16.242.0    0.0.0.0         255.255.255.0   U     0      0        0 vmnet1
172.17.0.0      0.0.0.0         255.255.0.0     U     0      0        0 docker0
192.168.4.0     0.0.0.0         255.255.255.0   U     0      0        0 vmnet8
192.168.122.0   0.0.0.0         255.255.255.0   U     0      0        0 virbr0

http://unix.stackexchange.com/questions/40560/how-to-know-if-a-network-interface-is-tap-tun-bridge-or-physical
The answer is to run ethtool -i tunOrTapDeviceName.

Hub vs. Bridge vs. Switch
https://i.ytimg.com/vi/Xmwmezk75Tk/maxresdefault.jpg

https://en.wikipedia.org/wiki/TUN/TAP
TUN (namely network TUNnel) simulates a network layer device and it operates with layer 3 packets like IP packets.
TAP (namely network tap) simulates a link layer device and it operates with layer 2 packets like Ethernet frames.
TUN is used with routing, while TAP is used for creating a network bridge.

Understanding TUN TAP Interfaces
http://www.naturalborncoder.com/virtualization/2014/10/17/understanding-tun-tap-interfaces/

Understanding Bridges
http://www.naturalborncoder.com/virtualization/2014/10/14/understanding-bridges/

Linux Bridge and Virtual Networking
http://www.innervoice.in/blogs/2013/12/02/linux-bridge-virtual-networking/

Introducing Linux Network Namespaces
http://blog.scottlowe.org/2013/09/04/introducing-linux-network-namespaces/

A Follow Up on Linux Network Namespaces
http://blog.scottlowe.org/2014/03/21/a-follow-up-on-linux-network-namespaces/

A Tutorial for Isolating Your System with Linux Namespaces
http://www.toptal.com/linux/separation-anxiety-isolating-your-system-with-linux-namespaces

VirutalBox :: Virtual networking
https://www.virtualbox.org/manual/ch06.html

Docker networks feature overview
https://docs.docker.com/engine/userguide/networking/

如何為網路找到適合的 MTU 大小
http://www.tp-link.tw/FAQ-190.html

eth0 eth0.1 eth0:1
